// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(["zepto"], function($) {
  var Geolocation;
  return Geolocation = (function() {

    function Geolocation() {
      this.onError = __bind(this.onError, this);

      this.onPosition = __bind(this.onPosition, this);
      this.position = null;
    }

    Geolocation.prototype.getCurrentPosition = function() {
      if (navigator.geolocation) {
        return navigator.geolocation.getCurrentPosition(this.onPosition, this.onError);
      } else {
        return alert("No Geolocation");
      }
    };

    Geolocation.prototype.onPosition = function(pos) {
      return this.updatePosition(pos);
    };

    Geolocation.prototype.onError = function(error) {
      var errMsgDOM;
      errMsgDOM = $(".error");
      switch (error.code) {
        case error.PERMISSION_DENIED:
          return alert("You have canceled location request");
        case error.POSITION_UNAVAILABLE:
          return alert("Location information is unavailable");
        case error.TIMEOUT:
          return alert("Location request timed out");
        case error.UNKNOWN_ERROR:
          return alert("Unknown error happened, oops");
      }
    };

    Geolocation.prototype.updatePosition = function(pos) {
      this.position = {
        lat: pos.coords.latitude,
        lon: pos.coords.longitude
      };
      return console.log(this.position);
    };

    return Geolocation;

  })();
});
