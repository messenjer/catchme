// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(["socket.io"], function(io) {
  var CatchMeServerApi;
  return CatchMeServerApi = (function() {

    function CatchMeServerApi() {
      this.onDebug = __bind(this.onDebug, this);

      this.onConnect = __bind(this.onConnect, this);

      this.onError = __bind(this.onError, this);
      this.url = "http://localhost:8080/";
      this.gameData = {};
      this.socket = null;
      this.connectCallback = null;
    }

    CatchMeServerApi.prototype.setConnectionCallback = function(connectCallback) {
      this.connectCallback = connectCallback;
    };

    CatchMeServerApi.prototype.init = function() {
      this.socket = io.connect(this.url);
      this.socket.on('error', this.onError);
      this.socket.on('connect', this.onConnect);
      this.socket.on('debug', this.onDebug);
      return this.socket.on('news', function(data) {
        console.log(data);
        return this.socket.emit('my other event', {
          my: 'data'
        });
      });
    };

    CatchMeServerApi.prototype.onError = function(error) {
      console.log(error);
      return alert("Connection error");
    };

    CatchMeServerApi.prototype.onConnect = function(message) {
      console.log("Connected");
      console.log(message);
      return typeof this.connectCallback === "function" ? this.connectCallback() : void 0;
    };

    CatchMeServerApi.prototype.onDebug = function(message) {
      console.log("debug message received:");
      return console.log(message);
    };

    return CatchMeServerApi;

  })();
});
